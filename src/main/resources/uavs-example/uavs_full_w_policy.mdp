model "uavs"
actions up down sTrt sThr w
states
	S0 {altitude0} Dir~(sTrt, <S1, 0.5> <S21, 0.5> <S22, 0.5>)
	S1 {altitude1} initial
	S2 {altitude2}
	S3 {altitude3}
	S4 {altitude4}
	S5 {altitude5}
	S6 {altitude6}
	S7 {altitude7} Dir~(sTrt, <S6, 0.5> <S8, 0.5> <S21, 0.5> <S22, 0.5>)
	S8 {altitude8}
	S9 {altitude9}
	S10 {altitude10}
	S11 {altitude11}
	S12 {altitude12}
	S13 {altitude13}
	S14 {altitude14} Dir~(sTrt, <S13, 0.5> <S15, 0.5> <S21, 0.5> <S22, 0.5>)
	S15 {altitude15}
	S16 {altitude16}
	S17 {altitude17}
	S18 {altitude18}
	S19 {altitude19}
	S20 {altitude20} Dir~(sTrt, <S19, 0.5> <S21, 0.5> <S22, 0.5>)
	S21 {uavsDetected}
	S22 {targetFound}
arcs
	a0   : (S0, sTrt) -> S1, 0.8
	a1   : (S0, sTrt) -> S21, 0.05
	a2   : (S0, sTrt) -> S22, 0.15
	a3   : (S1, down) -> S0, 0.9
	a4   : (S1, down) -> S2, 0.1
	a5   : (S1, up) -> S2, 0.9
	a6   : (S1, up) -> S0, 0.1
	a7   : (S2, down) -> S1, 0.9
	a8   : (S2, down) -> S3, 0.1
	a9   : (S2, up) -> S3, 0.9
	a10  : (S2, up) -> S1, 0.1
	a11  : (S3, down) -> S2, 0.9
	a12  : (S3, down) -> S4, 0.1
	a13  : (S3, up) -> S4, 0.9
	a14  : (S3, up) -> S2, 0.1
	a15  : (S4, down) -> S3, 0.9
	a16  : (S4, down) -> S5, 0.1
	a17  : (S4, up) -> S5, 0.9
	a18  : (S4, up) -> S3, 0.1
	a19  : (S5, down) -> S4, 0.9
	a20  : (S5, down) -> S6, 0.1
	a21  : (S5, up) -> S6, 0.9
	a22  : (S5, up) -> S4, 0.1
	a23  : (S6, down) -> S5, 0.9
	a24  : (S6, down) -> S7, 0.1
	a25  : (S6, up) -> S7, 0.9
	a26  : (S6, up) -> S5, 0.1
	a27  : (S7, sTrt) -> S6, 0.44
	a28  : (S7, sTrt) -> S8, 0.44
	a29  : (S7, sTrt) -> S21, 0.02
	a30  : (S7, sTrt) -> S22, 0.1
	a31  : (S8, down) -> S7, 0.9
	a32  : (S8, down) -> S9, 0.1
	a33  : (S8, up) -> S9, 0.9
	a34  : (S8, up) -> S7, 0.1
	a35  : (S9, down) -> S8, 0.9
	a36  : (S9, down) -> S10, 0.1
	a37  : (S9, up) -> S10, 0.9
	a38  : (S9, up) -> S8, 0.1
	a39  : (S10, down) -> S9, 0.9
	a40  : (S10, down) -> S11, 0.1
	a41  : (S10, up) -> S11, 0.9
	a42  : (S10, up) -> S9, 0.1
	a43  : (S11, down) -> S10, 0.9
	a44  : (S11, down) -> S12, 0.1
	a45  : (S11, up) -> S12, 0.9
	a46  : (S11, up) -> S10, 0.1
	a47  : (S12, down) -> S11, 0.9
	a48  : (S12, down) -> S13, 0.1
	a49  : (S12, up) -> S13, 0.9
	a50  : (S12, up) -> S11, 0.1
	a51  : (S13, down) -> S12, 0.9
	a52  : (S13, down) -> S14, 0.1
	a53  : (S13, up) -> S14, 0.9
	a54  : (S13, up) -> S12, 0.1
	a55  : (S14, sTrt) -> S13, 0.47
	a56  : (S14, sTrt) -> S15, 0.47
	a57  : (S14, sTrt) -> S21, 0.01
	a58  : (S14, sTrt) -> S22, 0.05
	a59  : (S15, down) -> S14, 0.9
	a60  : (S15, down) -> S16, 0.1
	a61  : (S15, up) -> S16, 0.9
	a62  : (S15, up) -> S14, 0.1
	a63  : (S16, down) -> S15, 0.9
	a64  : (S16, down) -> S17, 0.1
	a65  : (S16, up) -> S17, 0.9
	a66  : (S16, up) -> S15, 0.1
	a67  : (S17, down) -> S16, 0.9
	a68  : (S17, down) -> S18, 0.1
	a69  : (S17, up) -> S18, 0.9
	a70  : (S17, up) -> S16, 0.1
	a71  : (S18, down) -> S17, 0.9
	a72  : (S18, down) -> S19, 0.1
	a73  : (S18, up) -> S19, 0.9
	a74  : (S18, up) -> S17, 0.1
	a75  : (S19, down) -> S18, 0.9
	a76  : (S19, down) -> S20, 0.1
	a77  : (S19, up) -> S20, 0.9
	a78  : (S19, up) -> S18, 0.1
	a79  : (S20, sTrt) -> S19, 0.95
	a80  : (S20, sTrt) -> S21, 0.045
	a81  : (S20, sTrt) -> S22, 0.005
	a82  : (S21, w)   -> S21, 1.0
	a83  : (S22, w)    -> S22, 1.0

observe
	a0  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S0\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a1  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S0\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S21\")" returnType "jmarkov.jmdp.IntegerState"
	a2  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S0\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S22\")" returnType "jmarkov.jmdp.IntegerState"
	a3  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S1\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S0\")" returnType "jmarkov.jmdp.IntegerState"
	a4  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S1\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a5  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S1\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a6  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S1\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S0\")" returnType "jmarkov.jmdp.IntegerState"
	a7  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S2\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a8  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S2\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a9  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S2\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a10 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S2\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a11 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S3\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a12 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S3\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S4\")" returnType "jmarkov.jmdp.IntegerState"
	a13 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S3\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S4\")" returnType "jmarkov.jmdp.IntegerState"
	a14 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S3\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a15 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S4\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a16 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S4\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"
	a17 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S4\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"
	a18 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S4\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a19 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S5\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S4\")" returnType "jmarkov.jmdp.IntegerState"
	a20 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S5\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S6\")" returnType "jmarkov.jmdp.IntegerState"
	a21 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S5\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S6\")" returnType "jmarkov.jmdp.IntegerState"
	a22 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S5\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S4\")" returnType "jmarkov.jmdp.IntegerState"
	a23 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S6\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"
	a24 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S6\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S7\")" returnType "jmarkov.jmdp.IntegerState"
	a25 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S6\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S7\")" returnType "jmarkov.jmdp.IntegerState"
	a26 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S6\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"
	a27 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S7\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S6\")" returnType "jmarkov.jmdp.IntegerState"
	a28 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S7\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S8\")" returnType "jmarkov.jmdp.IntegerState"
	a29 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S7\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S21\")" returnType "jmarkov.jmdp.IntegerState"
	a30 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S7\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S22\")" returnType "jmarkov.jmdp.IntegerState"
	a31 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S8\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S7\")" returnType "jmarkov.jmdp.IntegerState"
	a32 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S8\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S9\")" returnType "jmarkov.jmdp.IntegerState"
	a33 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S8\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S9\")" returnType "jmarkov.jmdp.IntegerState"
	a34 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S8\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S7\")" returnType "jmarkov.jmdp.IntegerState"
	a35 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S9\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S8\")" returnType "jmarkov.jmdp.IntegerState"
	a36 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S9\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"
	a37 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S9\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"
	a38 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S9\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S8\")" returnType "jmarkov.jmdp.IntegerState"
	a39 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S10\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S9\")" returnType "jmarkov.jmdp.IntegerState"
	a40 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S10\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S11\")" returnType "jmarkov.jmdp.IntegerState"
	a41 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S10\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S11\")" returnType "jmarkov.jmdp.IntegerState"
	a42 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S10\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S9\")" returnType "jmarkov.jmdp.IntegerState"
	a43 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S11\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"
	a44 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S11\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S12\")" returnType "jmarkov.jmdp.IntegerState"
	a45 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S11\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S12\")" returnType "jmarkov.jmdp.IntegerState"
	a46 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S11\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"
	a47 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S12\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S11\")" returnType "jmarkov.jmdp.IntegerState"
	a48 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S12\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S13\")" returnType "jmarkov.jmdp.IntegerState"
	a49 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S12\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S13\")" returnType "jmarkov.jmdp.IntegerState"
	a50 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S12\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S11\")" returnType "jmarkov.jmdp.IntegerState"
	a51 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S13\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S12\")" returnType "jmarkov.jmdp.IntegerState"
	a52 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S13\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S14\")" returnType "jmarkov.jmdp.IntegerState"
	a53 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S13\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S14\")" returnType "jmarkov.jmdp.IntegerState"
	a54 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S13\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S12\")" returnType "jmarkov.jmdp.IntegerState"
	a55 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S14\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S13\")" returnType "jmarkov.jmdp.IntegerState"
	a56 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S14\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S15\")" returnType "jmarkov.jmdp.IntegerState"
	a57 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S14\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S21\")" returnType "jmarkov.jmdp.IntegerState"
	a58 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S14\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S22\")" returnType "jmarkov.jmdp.IntegerState"
	a59 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S15\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S14\")" returnType "jmarkov.jmdp.IntegerState"
	a60 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S15\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S16\")" returnType "jmarkov.jmdp.IntegerState"
	a61 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S15\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S16\")" returnType "jmarkov.jmdp.IntegerState"
	a62 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S15\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S14\")" returnType "jmarkov.jmdp.IntegerState"
	a63 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S16\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S15\")" returnType "jmarkov.jmdp.IntegerState"
	a64 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S16\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S17\")" returnType "jmarkov.jmdp.IntegerState"
	a65 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S16\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S17\")" returnType "jmarkov.jmdp.IntegerState"
	a66 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S16\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S15\")" returnType "jmarkov.jmdp.IntegerState"
	a67 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S17\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S16\")" returnType "jmarkov.jmdp.IntegerState"
	a68 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S17\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S18\")" returnType "jmarkov.jmdp.IntegerState"
	a69 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S17\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S18\")" returnType "jmarkov.jmdp.IntegerState"
	a70 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S17\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S16\")" returnType "jmarkov.jmdp.IntegerState"
	a71 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S18\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S17\")" returnType "jmarkov.jmdp.IntegerState"
	a72 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S18\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S19\")" returnType "jmarkov.jmdp.IntegerState"
	a73 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S18\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S19\")" returnType "jmarkov.jmdp.IntegerState"
	a74 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S18\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S17\")" returnType "jmarkov.jmdp.IntegerState"
	a75 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S19\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S18\")" returnType "jmarkov.jmdp.IntegerState"
	a76 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S19\") && action.equals(\"down\")",
		postcondition "result.label().equals(\"S20\")" returnType "jmarkov.jmdp.IntegerState"
	a77 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S19\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S20\")" returnType "jmarkov.jmdp.IntegerState"
	a78 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S19\") && action.equals(\"up\")",
		postcondition "result.label().equals(\"S18\")" returnType "jmarkov.jmdp.IntegerState"
	a79 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S20\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S19\")" returnType "jmarkov.jmdp.IntegerState"
	a80 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S20\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S21\")" returnType "jmarkov.jmdp.IntegerState"
	a81 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S20\") && action.equals(\"sTrt\")",
		postcondition "result.label().equals(\"S22\")" returnType "jmarkov.jmdp.IntegerState"
	a82 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S21\") && action.equals(\"w\")",
		postcondition "result.label().equals(\"S21\")" returnType "jmarkov.jmdp.IntegerState"
	a83 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S22\") && action.equals(\"w\")",
		postcondition "result.label().equals(\"S22\")" returnType "jmarkov.jmdp.IntegerState"


control
	S0 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S1 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S2 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S3 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S4 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S5 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S6 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S7 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S8 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S9 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S10 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S11 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S12 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S13 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S14 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S15 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S16 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S17 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S18 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S19 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S20 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)",
	   args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}

reset
	"public void it.unimi.di.se.sut.MDPExecutor.resetExecution(..)"

profile

sampleSize 100
explorationPolicy uncertainty-flat
termination limit 20000

decisionRules
    S0 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S1 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S2 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S3 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S4 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S5 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S6 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S7 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S8 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S9 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S10 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S11 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S12 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S13 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S14 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S15 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S16 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S17 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S18 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S19 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S20 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S21 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
    S22 ->  (S0, sTrt) (S1, up) (S2, up) (S3, up) (S4, up) (S5, up) (S6, down) (S7, sTrt) (S8, up) (S9, up) (S10, up) (S11, up) (S12, up) (S13, down) (S14, sTrt) (S15, up) (S16, up) (S17, up) (S18, down) (S19, down) (S20, sTrt) (S21, w) (S22, w)
