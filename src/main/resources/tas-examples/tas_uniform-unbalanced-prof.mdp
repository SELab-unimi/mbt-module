model "tas_uniform-unbalanced-prof"
actions
	w s b c v a e r
states
	S0  {} initial
	S1  {stop}
	S2  {alarm} Dir~(a, <S3, 80.5> <S4, 15.5> <S11, 5.5>)
	S3  {full}
	S4  {}
	S5  {}
	S6  {}  Dir~(w, <S7, 0.5> <S8, 0.5> <S9, 0.5>)
	S7  {fast}
	S8  {slow}
	S9  {}
	S10 {success}
	S11 {error}

arcs
	a0  : (S0, s) -> S1, 1.0
	a1  : (S1, w) -> S1, 1.0
	a2  : (S0, b) -> S2, 1.0
	a3  : (S2, a) -> S3, 0.8
	a4  : (S2, a) -> S4, 0.15
	a20 : (S2, a) -> S11, 0.05
	a5  : (S4, w) -> S2, 1.0
	a6  : (S3, w) -> S10, 1.0
	a7  : (S0, v) -> S5, 1.0
	a9  : (S5, c) -> S6, 1.0
	a10 : (S6, w) -> S7, 0.7
	a11 : (S6, w) -> S8, 0.2
	a12 : (S6, w) -> S9, 0.1
	a13 : (S7, w) -> S10, 1.0
	a14 : (S8, w) -> S10, 1.0
	a15 : (S9, w) -> S5, 1.0
	a16 : (S10, w) -> S10, 1.0

	a17 : (S0, e) -> S10, 1.0
	a18 : (S5, e) -> S10, 1.0

	a21 : (S11, w) -> S11, 1.0

observe
	a0  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S0\") && action.equals(\"s\")", postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a1  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S1\") && action.equals(\"w\")", postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a2  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S0\") && action.equals(\"b\")", postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a3  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S2\") && action.equals(\"a\")", postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a4  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S2\") && action.equals(\"a\")", postcondition "result.label().equals(\"S4\")" returnType "jmarkov.jmdp.IntegerState"
	a20 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S2\") && action.equals(\"a\")", postcondition "result.label().equals(\"S11\")" returnType "jmarkov.jmdp.IntegerState"
	a5  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S4\") && action.equals(\"w\")", postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a6  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S3\") && action.equals(\"w\")", postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"
	a7  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S0\") && action.equals(\"v\")", postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"
	a9  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S5\") && action.equals(\"c\")", postcondition "result.label().equals(\"S6\")" returnType "jmarkov.jmdp.IntegerState"
	a10 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S6\") && action.equals(\"w\")", postcondition "result.label().equals(\"S7\")" returnType "jmarkov.jmdp.IntegerState"
	a11 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S6\") && action.equals(\"w\")", postcondition "result.label().equals(\"S8\")" returnType "jmarkov.jmdp.IntegerState"
	a12 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S6\") && action.equals(\"w\")", postcondition "result.label().equals(\"S9\")" returnType "jmarkov.jmdp.IntegerState"
	a13 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S7\") && action.equals(\"w\")", postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"
	a14 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S8\") && action.equals(\"w\")", postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"
	a15 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S9\") && action.equals(\"w\")", postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"
	a16 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S10\") && action.equals(\"w\")", postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"

	a17 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S0\") && action.equals(\"e\")", postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"
	a18 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S5\") && action.equals(\"e\")", postcondition "result.label().equals(\"S10\")" returnType "jmarkov.jmdp.IntegerState"
	a21 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S11\") && action.equals(\"w\")", postcondition "result.label().equals(\"S11\")" returnType "jmarkov.jmdp.IntegerState"

control
	S0 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)", args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S2 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)", args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S5 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)", args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}

reset
	"public void it.unimi.di.se.sut.MDPExecutor.resetExecution(..)"

profile
	prof1:
		S2 -> 0.1
		S6 -> 0.6
	prof2:
		S6 -> 0.1
		S2 -> 0.6

sampleSize 1000
explorationPolicy profile name prof1
termination limit 2000
