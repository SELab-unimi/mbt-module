model "rescuerobot"
actions
	e1 w
states
	S0 {navigating} initial Dir~(e1, <S1, 0.5> <S2, 0.5> <S6, 0.5>)
	S1 {contact}
	S2 {humanDetected}
	S3 {breakingRange} Dir~(e1, <S1, 0.5> <S4, 0.5> <S5, 0.5>)
	S4 {protectiveDistViolation}
	S5 {AlarmMsg}
	S6 {misclassification}
arcs
	a0  : (S0, e1) -> S1, 0.01
	a1  : (S0, e1) -> S2, 0.96
	a2  : (S0, e1) -> S6, 0.03
	a3  : (S1, w) -> S1, 1.0
	a4  : (S6, w) -> S6, 1.0
	a5  : (S2, w) -> S3, 1.0
	a6  : (S3, e1) -> S1, 0.02
	a7  : (S3, e1) -> S4, 0.03
	a8  : (S3, e1) -> S5, 0.95
	a9  : (S4, e1) -> S1, 0.01
	a10 : (S4, e1) -> S5, 0.99
	a11 : (S5, w) -> S5, 1.0
observe
	a0  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S0\") && action.equals(\"e1\")", postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a1  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S0\") && action.equals(\"e1\")", postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a2  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S0\") && action.equals(\"e1\")", postcondition "result.label().equals(\"S6\")" returnType "jmarkov.jmdp.IntegerState"
	a3  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S1\") && action.equals(\"w\")", postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a4  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S6\") && action.equals(\"w\")", postcondition "result.label().equals(\"S6\")" returnType "jmarkov.jmdp.IntegerState"
	a5  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S2\") && action.equals(\"w\")", postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a6  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S3\") && action.equals(\"e1\")", postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a7  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S3\") && action.equals(\"e1\")", postcondition "result.label().equals(\"S4\")" returnType "jmarkov.jmdp.IntegerState"
	a8  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S3\") && action.equals(\"e1\")", postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"
	a9  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S4\") && action.equals(\"e1\")", postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a10 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S4\") && action.equals(\"e1\")", postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"
	a11 -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)",
		args {state:"jmarkov.jmdp.IntegerState" action:"String"},
		precondition "state.label().equals(\"S5\") && action.equals(\"w\")", postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"

control
	S0 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)", args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S3 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)", args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S4 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)", args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}

reset
	"public void it.unimi.di.se.sut.MDPExecutor.resetExecution(..)"

profile

sampleSize 100
explorationPolicy distance
termination bounds
