model "safehome"
actions
	i0 i1
states
	S0  {idle} initial
	S1  {ready}
	S2  {init} Dir~(i0, <S1, 0.5> <S2, 0.5>)
	S3  {monitoring} Dir~(i0, <S3, 0.5> <S5, 0.5> <S8, 0.5>)
	S4  {intrusionDetected}
	S5  {sensorsLost}
	S6  {alarm} Dir~(i1, <S6, 0.5> <S7, 0.5>)
	S7  {policeNotified}
	S8  {assistance}

arcs
	a0  : (S0, i0) -> S1, 1.0
	a1  : (S1, i0) -> S2, 1.0
	a2  : (S2, i1) -> S3, 1.0
	a3  : (S2, i0) -> S2, 0.95
	a4  : (S2, i0) -> S1, 0.05
	a5  : (S3, i0) -> S3, 0.97
	a6  : (S3, i0) -> S5, 0.02
	a7  : (S3, i0) -> S8, 0.01
	a8  : (S3, i1) -> S3, 0.03
	a9  : (S3, i1) -> S4, 0.97
	a10 : (S5, i0) -> S2, 1.0
	a11 : (S8, i0) -> S8, 1.0
	a12 : (S4, i0) -> S3, 1.0
	a13 : (S4, i1) -> S6, 1.0
	a14 : (S6, i0) -> S4, 1.0
	a15 : (S6, i1) -> S6, 0.02
	a16 : (S6, i1) -> S7, 0.98
	a17 : (S7, i0) -> S7, 1.0

observe
	a0  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S0\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a1  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S1\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a2  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S2\") && action.equals(\"i1\")", postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a3  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S2\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a4  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S2\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S1\")" returnType "jmarkov.jmdp.IntegerState"
	a5  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S3\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a6  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S3\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S5\")" returnType "jmarkov.jmdp.IntegerState"
	a7  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S3\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S8\")" returnType "jmarkov.jmdp.IntegerState"
	a8  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S3\") && action.equals(\"i1\")", postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a9  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S3\") && action.equals(\"i1\")", postcondition "result.label().equals(\"S4\")" returnType "jmarkov.jmdp.IntegerState"
	a10  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S5\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S2\")" returnType "jmarkov.jmdp.IntegerState"
	a11  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S8\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S8\")" returnType "jmarkov.jmdp.IntegerState"
	a12  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S4\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S3\")" returnType "jmarkov.jmdp.IntegerState"
	a13  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S4\") && action.equals(\"i1\")", postcondition "result.label().equals(\"S6\")" returnType "jmarkov.jmdp.IntegerState"
	a14  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S6\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S4\")" returnType "jmarkov.jmdp.IntegerState"
	a15  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S6\") && action.equals(\"i1\")", postcondition "result.label().equals(\"S6\")" returnType "jmarkov.jmdp.IntegerState"
	a16  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S6\") && action.equals(\"i1\")", postcondition "result.label().equals(\"S7\")" returnType "jmarkov.jmdp.IntegerState"
	a17  -> "public jmarkov.jmdp.IntegerState it.unimi.di.se.sut.MDPExecutor.doAction(..)", args {state:"jmarkov.jmdp.IntegerState" action:"String"}, precondition "state.label().equals(\"S7\") && action.equals(\"i0\")", postcondition "result.label().equals(\"S7\")" returnType "jmarkov.jmdp.IntegerState"

control
	S2 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)", args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S3 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)", args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}
	S6 -> "private String it.unimi.di.se.sut.Driver.waitForAction(..)", args {actionList:"jmarkov.basic.Actions<jmarkov.jmdp.StringAction>" input:"java.io.InputStream"}

reset
	"public void it.unimi.di.se.sut.MDPExecutor.resetExecution(..)"

profile
	prof1:
		S2 -> 0.5
		S3 -> 0.5
		S6 -> 0.5

sampleSize 1000
explorationPolicy distance
termination limit 2000
decisionRules
	 S2 -> (S0, i0) (S1, i0) (S2, i0) (S3, i0) (S4, i0) (S5, i0) (S6, i0) (S7, i0) (S8, i0)
	 S3 -> (S0, i0) (S1, i0) (S2, i1) (S3, i0) (S4, i0) (S5, i0) (S6, i0) (S7, i0) (S8, i0)
	 S6 -> (S0, i0) (S1, i0) (S2, i1) (S3, i1) (S4, i1) (S5, i0) (S6, i1) (S7, i0) (S8, i0)